stages:
  - build
  - test
  - package
  - deploy

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_TOKEN

build webstore:
  stage: build
  image: node:11-alpine
  cache:
    paths:
      - .gradle/wrapper
      - .gradle/caches
  artifacts:
    paths:
      - build/libs
  tags:
    - webstore
  script:
    - ./gradlew assemble
  only:
    - master
    - tags

test webstore:
  stage: test
  tags:
    - webstore
  script:
    - ./gradlew check
  only:
    - master
    - tags

package webstore:
  stage: package
  tags:
    - webstore
  script:
    - docker build -t $CI_REGISTRY_USER/$CI_REGISTRY_REPOSITORY:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_USER/$CI_REGISTRY_REPOSITORY
  only:
    - master
    - tags

deploy webstore:
  stage: deploy
  tags:
    - webstore
  script:
    - docker pull $CI_REGISTRY_USER/$CI_REGISTRY_REPOSITORY:$CI_COMMIT_SHORT_SHA
    - docker stop webstore-back-container || true
    - docker rm webstore-back-container || true
    - docker run -e "SPRING_PROFILES_ACTIVE=prod" --name webstore-back-container --net="host" --restart=always -d $CI_REGISTRY_USER/$CI_REGISTRY_REPOSITORY \
      -v /home/gitlab-runner/logs:/logs
  only:
    - master
    - tags

